---
- name: Install Firedancer
  hosts: all
  become: true
  gather_facts: no
  become_user: solv
  pre_tasks:
    - name: Check if host name is firedancer
      debug:
        msg: "Skipping tasks because validator_type is not 'firedancer'"
      when: hostvars[inventory_hostname].validator_type != 'firedancer'
      ignore_errors: false
      failed_when: hostvars[inventory_hostname].validator_type != 'firedancer'
      tags: skip_check
  tasks:
    - name: Clone Firedancer repository
      git:
        repo: https://github.com/firedancer-io/firedancer.git
        dest: /home/solv/firedancer
        update: yes
        force: yes
        version: v{{ hostvars[inventory_hostname].solana_version }}

    - name: Initialize git submodules
      command: git submodule update --init --recursive
      args:
        chdir: /home/solv/firedancer

    - name: Install rustup
      shell: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
      args:
        chdir: /home/solv
      become: yes
      become_user: solv

    - name: Ensure rustup is in PATH
      shell: |
        echo 'source $HOME/.cargo/env' >> ~/.bashrc
        . $HOME/.cargo/env
        export PATH="$HOME/.cargo/bin:$PATH"
      args:
        executable: /bin/bash
      become: yes
      become_user: solv

    - name: Install Rust 1.81.0
      shell: |
        export PATH="$HOME/.cargo/bin:$PATH"
        rustup install 1.81.0
      args:
        chdir: /home/solv/firedancer
      become: yes
      become_user: solv

    - name: Run deps.sh script with yes
      shell: |
        yes y | ./deps.sh
      args:
        chdir: /home/solv/firedancer

    - name: Build Firedancer with make
      shell: |
        export PATH="$HOME/.cargo/bin:$PATH"
        . $HOME/.cargo/env
        make -j fdctl solana
      args:
        chdir: /home/solv/firedancer
        executable: /bin/bash
      async: 3600
      poll: 30

    - name: Create symbolic link for fdctl
      shell: sudo ln -s /home/solv/firedancer/build/native/gcc/bin/fdctl /usr/local/bin/fdctl
      args:
        creates: /usr/local/bin/fdctl
