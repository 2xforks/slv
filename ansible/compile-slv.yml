---
# Ansible playbook to compile SLV on a remote build server
# This playbook clones the repository, compiles the code, and uploads the artifacts

- name: Compile SLV
  hosts: build_servers
  become: true
  vars:
    version: '{{ version }}'
    github_token: '{{ github_token }}'
    aws_access_key_id: '{{ aws_access_key_id }}'
    aws_secret_access_key: '{{ aws_secret_access_key }}'
    build_dir: /opt/slv-build
    artifacts_dir: /opt/slv-artifacts
  tasks:
    - name: Create artifacts directory
      file:
        path: '{{ artifacts_dir }}'
        state: directory
        mode: '0755'
        owner: root
        group: root

    - name: Clean build directory
      file:
        path: '{{ build_dir }}'
        state: absent

    - name: Create build directory
      file:
        path: '{{ build_dir }}'
        state: directory
        mode: '0755'
        owner: root
        group: root

    - name: Clone repository
      git:
        repo: https://github.com/ValidatorsDAO/slv.git
        dest: '{{ build_dir }}'
        version: 'v{{ version }}'
      environment:
        GIT_TERMINAL_PROMPT: 0
        GH_TOKEN: '{{ github_token }}'

    - name: Update version in constants
      replace:
        path: '{{ build_dir }}/cmn/constants/version.ts'
        regexp: "export const VERSION = '[^']*'"
        replace: "export const VERSION = '{{ version }}'"

    - name: Run version update script
      shell: |
        export DENO_INSTALL="/root/.deno"
        export PATH="$DENO_INSTALL/bin:$PATH"
        cd {{ build_dir }} && deno run -A scripts/update-version.ts
      args:
        executable: /bin/bash

    - name: Create dist directory
      file:
        path: '{{ build_dir }}/dist'
        state: directory
        mode: '0755'

    - name: Build for Linux
      shell: |
        export DENO_INSTALL="/root/.deno"
        export PATH="$DENO_INSTALL/bin:$PATH"
        cd {{ build_dir }} && deno task build:linux
      args:
        executable: /bin/bash

    - name: Copy Linux artifacts
      copy:
        src: '{{ build_dir }}/dist/slv-x86_64-unknown-linux-gnu-exe.tar.gz'
        dest: '{{ artifacts_dir }}/slv-x86_64-unknown-linux-gnu-exe.tar.gz'
        remote_src: yes

    - name: Upload Linux executable
      shell: |
        export AWS_ACCESS_KEY_ID="{{ aws_access_key_id }}"
        export AWS_SECRET_ACCESS_KEY="{{ aws_secret_access_key }}"
        cd {{ build_dir }}/dist && aws --endpoint-url=https://278a7109e511280594fe6a2ebb778333.r2.cloudflarestorage.com/slv s3 cp slv-x86_64-unknown-linux-gnu-exe.tar.gz s3://slv/{{ version }}/x86_64-unknown-linux-gnu-exe.tar.gz --content-disposition 'attachment; filename=install'
      args:
        executable: /bin/bash

    - name: Create template archive
      shell: |
        cd {{ build_dir }} && tar -czf dist/template.tar.gz ./template/{{ version }}
      args:
        executable: /bin/bash

    - name: Upload template
      shell: |
        export DENO_INSTALL="/root/.deno"
        export PATH="$DENO_INSTALL/bin:$PATH"
        export AWS_ACCESS_KEY_ID="{{ aws_access_key_id }}"
        export AWS_SECRET_ACCESS_KEY="{{ aws_secret_access_key }}"
        cd {{ build_dir }} && deno run -A cli/uploadTemplate.ts
      args:
        executable: /bin/bash

    - name: Upload install script
      shell: |
        export AWS_ACCESS_KEY_ID="{{ aws_access_key_id }}"
        export AWS_SECRET_ACCESS_KEY="{{ aws_secret_access_key }}"
        cd {{ build_dir }}/sh && aws --endpoint-url=https://278a7109e511280594fe6a2ebb778333.r2.cloudflarestorage.com/slv s3 cp install s3://slv/ --content-disposition 'attachment; filename=install'
      args:
        executable: /bin/bash

    - name: Purge cache
      shell: |
        export DENO_INSTALL="/root/.deno"
        export PATH="$DENO_INSTALL/bin:$PATH"
        export AWS_ACCESS_KEY_ID="{{ aws_access_key_id }}"
        export AWS_SECRET_ACCESS_KEY="{{ aws_secret_access_key }}"
        cd {{ build_dir }} && deno run -A cmn/lib/purgeR2Cache.ts
      args:
        executable: /bin/bash

    - name: Copy artifacts back
      fetch:
        src: '{{ artifacts_dir }}/slv-x86_64-unknown-linux-gnu-exe.tar.gz'
        dest: ./artifacts/
        flat: yes
